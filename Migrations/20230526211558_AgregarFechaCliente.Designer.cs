// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrasladoSeguro.Data;

#nullable disable

namespace TrasladoSeguro.Migrations
{
    [DbContext(typeof(TrasladoSeguroContext))]
    [Migration("20230526211558_AgregarFechaCliente")]
    partial class AgregarFechaCliente
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.4.23259.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TrasladoSeguro.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ConductorId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Idservicio")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ServicioIdservicio")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConductorId");

                    b.HasIndex("ServicioIdservicio");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("TrasladoSeguro.Models.Conductor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Conductor");
                });

            modelBuilder.Entity("TrasladoSeguro.Models.Servicio", b =>
                {
                    b.Property<int>("Idservicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idservicio"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Idservicio");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("TrasladoSeguro.Models.Cliente", b =>
                {
                    b.HasOne("TrasladoSeguro.Models.Conductor", "Conductor")
                        .WithMany("Clientes")
                        .HasForeignKey("ConductorId");

                    b.HasOne("TrasladoSeguro.Models.Servicio", "Servicio")
                        .WithMany("Clientes")
                        .HasForeignKey("ServicioIdservicio");

                    b.Navigation("Conductor");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("TrasladoSeguro.Models.Conductor", b =>
                {
                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("TrasladoSeguro.Models.Servicio", b =>
                {
                    b.Navigation("Clientes");
                });
#pragma warning restore 612, 618
        }
    }
}
